git config --global user.email "ridpatel2907@gmail.com"
git config --global user.name "Krishna"

learn git part-1

1)git init// to make ur project a git project,it will create a empty .git folder inside of ur project folder,which may be hidden
2)git status//it shows status that which files are tracked and which are not tracked.so untracked files needed to be add in staging area.
3)git add [filename] || A //files are added in the staging area.
4)git commit -m  "msg" //we will write commit msg after some changes in project,so we will have a work flow of our work,and we can track which things are changed in our project

5)git remote add origin  repoName 
  //-----------------till now our project in on local machine,now we want to host it.we will create a new git repository
  //-----------------above command is used to establish connection between our project which is on local pc and git remote server's repository which we have created.
 

6)git push origin master
 /-----------------/ it will add ur project files to the remote server repository
 //-----------------if u establish connection for the first time then it will ask u about ur github ac email id and password

7)git clone reponame// this command is used to pull the code from git repository to user's local pc.


8)git pull origin master
//-----------if owner have made some changes and then push it on github again then if remote user wants that new added changes in his machine then
//----------- he needs to go into the folder name e.g Github-Learning in his local machine then he needs to write above command on gitbash 
/-------------then newly added changes which is made by remote owner will be pulled to the user's local pc.

graph to understand is as follow:
git init-user1
git add file name-staging area
git commit -m "msg"-snapshot
git remote add origin reponame-github

******************************************************************************

command for a branch -----------
/****it will create a branch(copy of originl-master project).
so if we will make changes in a branch, it will not affect original copy.after final testing of a branch,
we will merge it into a live master copy.so in this way original master copy will not be directed affected.***/

1)git branch//show the number of branches and the status in which branch u are right now

2)git branch branchName//to create a branch

3)git checkout branchName//to make entry in particular branch

4)git merge branchName//while uare inside master branch u can use this command to merge master with branch
